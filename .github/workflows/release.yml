name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        goarm: [6]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
      PREFIX: /usr/local
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.17
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: |
          if [ "$GOOS" = "windows" ]; then
            go build -ldflags "-s -w" -o xray.exe ./main
          else
            go build -ldflags "-s -w" -o xray ./main
          fi
      - name: Prepare assets
        run: |
          mkdir -p build_assets
          mv -f resources/* build_assets
          cp ${GITHUB_WORKSPACE}/README.md ./build_assets/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./build_assets/LICENSE
          if [ "$GOOS" = "windows" ]; then
            cp ${GITHUB_WORKSPACE}/xray_no_window.vbs ./build_assets/xray_no_window.vbs || echo "xray_no_window.vbs not found, skipping."
          fi
      - name: Create ZIP archive
        if: github.event_name == 'release'
        run: |
          cd build_assets
          zip -r ../xray-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goarm }}.zip *
          cd ..
      - name: Upload release asset
        uses: actions/upload-artifact@v2
        with:
          name: xray-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goarm }}.zip
          path: xray-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goarm }}.zip
